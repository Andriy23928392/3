#include <iostream>
#include <vector>
#include <iomanip>
using namespace std;

// Задача 1: Виведення зафарбованого прямокутника
void filledRectangle(int m, int n) {
    for (int i = 0; i < m; ++i) {
        for (int j = 0; j < n; ++j) {
            cout << '*';
        }
        cout << endl;
    }
}

// Задача 2: Порожнистий прямокутник із товщиною межі k
void hollowRectangle(int m, int n, int k) {
    for (int i = 0; i < m; ++i) {
        for (int j = 0; j < n; ++j) {
            if (i < k || i >= m - k || j < k || j >= n - k)
                cout << '*';
            else
                cout << ' ';
        }
        cout << endl;
    }
}

// Задача 3: Заповнення прямокутника послідовними числами
void sequentialNumbers(int m, int n) {
    int num = 0;
    for (int i = 0; i < m; ++i) {
        for (int j = 0; j < n; ++j) {
            cout << setw(3) << num++;
        }
        cout << endl;
    }
}

// Задача 4: Заповнення прямокутника змійкою
void snakeFill(int m, int n) {
    int num = 0;
    for (int i = 0; i < m; ++i) {
        if (i % 2 == 0) {
            for (int j = 0; j < n; ++j) {
                cout << setw(3) << num++;
            }
        } else {
            for (int j = n - 1; j >= 0; --j) {
                cout << setw(3) << num++;
            }
        }
        cout << endl;
    }
}

// Задача 5: Заповнення прямокутника спіраллю
void spiralFill(int m, int n) {
    vector<vector<int>> matrix(m, vector<int>(n, 0));
    int top = 0, bottom = m - 1, left = 0, right = n - 1;
    int num = 0;

    while (top <= bottom && left <= right) {
        for (int i = left; i <= right; ++i) matrix[top][i] = num++;
        top++;

        for (int i = top; i <= bottom; ++i) matrix[i][right] = num++;
        right--;

        if (top <= bottom) {
            for (int i = right; i >= left; --i) matrix[bottom][i] = num++;
            bottom--;
        }

        if (left <= right) {
            for (int i = bottom; i >= top; --i) matrix[i][left] = num++;
            left++;
        }
    }

    for (const auto& row : matrix) {
        for (int val : row) {
            cout << setw(3) << val;
        }
        cout << endl;
    }
}

// Задача 6: Малювання сніжинки
void drawSnowflake(int n) {
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n; ++j) {
            if (i == j || i + j == n - 1 || i == n / 2 || j == n / 2)
                cout << '*';
            else
                cout << ' ';
        }
        cout << endl;
    }
}

int main() {
    int task;
    cout << "Виберіть задачу (1-6): ";
    cin >> task;

    if (task == 1) {
        int m, n;
        cout << "Введіть розміри m та n: ";
        cin >> m >> n;
        filledRectangle(m, n);
    } else if (task == 2) {
        int m, n, k;
        cout << "Введіть розміри m, n та товщину межі k: ";
        cin >> m >> n >> k;
        hollowRectangle(m, n, k);
    } else if (task == 3) {
        int m, n;
        cout << "Введіть розміри m та n: ";
        cin >> m >> n;
        sequentialNumbers(m, n);
    } else if (task == 4) {
        int m, n;
        cout << "Введіть розміри m та n: ";
        cin >> m >> n;
        snakeFill(m, n);
    } else if (task == 5) {
        int m, n;
        cout << "Введіть розміри m та n: ";
        cin >> m >> n;
        spiralFill(m, n);
    } else if (task == 6) {
        int n;
        cout << "Введіть розмір сніжинки n: ";
        cin >> n;
        drawSnowflake(n);
    } else {
        cout << "Неправильний вибір задачі." << endl;
    }

    return 0;
}
